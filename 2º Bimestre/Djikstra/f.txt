grafo

7 9
1 2 4
1 6 3
2 3 5
2 5 12
3 4 10
4 5 5
5 6 10
5 7 2
6 7 7

gab
dist raiz = 6
| 1 | 2 | 3 | 4 | 5 | 6 | 7 |
| 3 | 7 | 12| 15| 9 | 0 | 7 |

Lista adj

1 - > 2,6
2 - > 1,3,5
3 - > 2,4
4 - > 3,5
5 - > 2,4,6,7
6 - > 1,5,7
7 - > 5,6
-----------------------------------------------------------------------------
Regra : atual.distancia + peso < atual.lista_adj[i].distancia

Dist
| 1 | 2 | 3 | 4 | 5 | 6 | 7 |
| 3 | 7 | 12 | 14 | 9 | 0 | 7 |

atual | distancia
4       14   
atual.lista_adj[i] = 1
min RIP atual:
Passos:

    ► (6,0) add min RIP | atualiza dist 
    ► vert[6].lista_adj[0] = 1
    ► regra : (0 + 3) < f ? sim
    ► (1,3) add min RIP | atualiza dist
    ► vert[6].lista_adj[1] = 5
    ► regra : (0 + 10) < f ? sim
    ► (5,10) add min rip | atualiza dist
    ► vert[6].lista_adj[2] = 7
    ► regra : (0 + 7 ) < f ? sim
    ► (7,7) add min rip | atualiza dist
    ► vert[6].lista end
    ► remove (6,0) min RIP

    ► inicia min_dist = (1,3)| add atual | dist
    ► vert[1].lista_adj[0] = 2
    ► regra: (3 + 4 ) < f ? sim
    ► (2,7) add min RIP | atualiza dist
    ► vert[1].lista_adj[1] = 6
    ► regra: (3 + 3) < 0 ? nao, nao faz nada
    ► vert[1].lista end
    ► remove (1,3) min RIP

    ► inicia min_dist = (2,7) | add atual | dist
    ► vert[2].lista_adj[0] = 1
    ► regra: (7 + 4) < 3 ? nao, nao faz nada 
    ► vert[2].lista_adj[1] = 3
    ► regra: (7 + 5 ) < f ? sim
    ► (3,12) add min RIP | atualiza dist
    ► vert[2].lista_adj[2] = 5
    ► regra: (2 + 12) < 10 ? nao, nao faz nada
    ► vert[2].lista end
    ► remove (2,7) min RIP

    ► inicia min_dist = (7,7) | add atual | dist
    ► vert[7].lista_adj[0] = 5
    ► regra : (7 + 2 ) < 10 ? sim
    ► (5 9) add min RIP | atualiza dist
    ► vert[7].lista_adj[1] = 6
    ► regra : (7 + 7) < 0 ? nao, nao faz nada
    ► vert[7].lista end
    ► remove (7,7) min RIP

    ► inicia min_dist = (5,9) | add atual | dist
    ► vert[5].lista_adj[0] = 2
    ► regra : (9 + 12) < 7 ? nao, nao faz nada
    ► vert[5].lista_adj[1] = 4
    ► regra : (9 + 5) < f ? sim
    ► (4 14) add min RIP | atualiza dist
    ► vert[5].lista_adj[2] = 6
    ► regra : (9 + 10) < 0 ? Nao, nao faz nada
    ► vert[5].lista_adj[3] = 7
    ► regra (9 + 2) < 7 ? nao, nao faz nada 
    ► vert[5].lista_adj end
    ► remove (5,9) MIN RIP

    ► inicia min_dist(5,10) | add atual | dist 
    ► vert[5].lista_adj[0] = 2
    ► regra : (10 + 12) < 7 ? nao, nao faz nada
    ► vert[5].lista_adj[1] = 4
    ► regra : (10 + 5) < 14 ? nao, nao faz nada
    ► vert[5].lista_adj[2] = 6
    ► regra : (10 + 10) < 0 ? Nao, nao faz nada
    ► vert[5].lista_adj[3] = 7
    ► regra (10 + 2) < 7 ? nao, nao faz nada 
    ► vert[5].lista_adj end
    ► remove (5,10) MIN RIP
    
    ► inicia min_dist(3,12) | add atual | dist
    ► vert[3].lista_adj[0] = 2 
    ► regra : (12 + 5) < 7 ? nao, nao faz nada
    ► vert[3].lista_adj[1] = 4
    ► regra : (12 + 10) < 14 ? nao, nao faz nada
    ► vert[3].lista_adj end
    ► remove (3,12) min RIP

    ► inicia min _dist(4,14) | add atual | dist 
    ► vert[4].lista_adj[0] = 3
    ► regra: (14 + 10) < 12 ? nao, nao faz nada
    ► vert[4].lista_adj[1] = 5
    ► regra: (14 + 5) < 9 ? nao, nao faz nada 
    ► remove (3,12) min RIP 

    ► MIN RIP VAZIA
    ► DISTANCIA FINAL DE CADA VERTICE PARA O VERTICE 6
        | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
        | 3 | 7 | 12 | 14 | 9 | 0 | 7 |
    
7 9
1 2 4
1 6 3
2 3 5
2 5 12
3 4 10
4 5 5
5 6 10
5 7 2
6 7 7